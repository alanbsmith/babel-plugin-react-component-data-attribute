// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`babelPluginReactComponentDataAttribute() adds the property to React.createElement calls 1`] = `
"function MyComponent() {
  return React.createElement(someElement, { foo: 'bar', 'data-component': 'MyComponent'
  });
}"
`;

exports[`babelPluginReactComponentDataAttribute() adds the property to React.createElement calls 2`] = `
"function MyComponent() {
  return React.createElement(someElement, {
    \\"data-component\\": \\"MyComponent\\"
  });
}"
`;

exports[`babelPluginReactComponentDataAttribute() arrow expressions handles non-block statement arrow expressions 1`] = `"const MyComponent = () => <div data-component=\\"MyComponent\\" />;"`;

exports[`babelPluginReactComponentDataAttribute() classes only adds attributes to render methods 1`] = `
"class MyComponent extends React.Component {
  renderAnotherThing() {
    return <div />;
  }
}"
`;

exports[`babelPluginReactComponentDataAttribute() does not add attributes from a parent function 1`] = `
"function MyComponent() {
  return () => <div />;
}"
`;

exports[`babelPluginReactComponentDataAttribute() does not add attributes to composite components 1`] = `
"function MyComponent() {
  return <SomeOtherComponent />;
}"
`;

exports[`babelPluginReactComponentDataAttribute() handles conditional returns 1`] = `
"function MyComponent() {
  return true ? <div data-component=\\"MyComponent\\" /> : <span data-component=\\"MyComponent\\" />;
}"
`;

exports[`babelPluginReactComponentDataAttribute() handles conditional returns 2`] = `
"function MyComponent() {
  if (true) {
    return <div data-component=\\"MyComponent\\" />;
  } else {
    return <span data-component=\\"MyComponent\\" />;
  }
}"
`;

exports[`babelPluginReactComponentDataAttribute() handles simple returns 1`] = `
"function MyComponent() {
  return <div data-component=\\"MyComponent\\" />;
}"
`;

exports[`babelPluginReactComponentDataAttribute() name uses the file’s basename when it is not unknown and is not an index file 1`] = `
"export default class extends React.Component {
  render() {
    return <div data-component=\\"MyComponent\\" />;
  }
}"
`;

exports[`babelPluginReactComponentDataAttribute() name uses the file’s basename when it is not unknown and is not an index file 2`] = `
"export default function () {
  return <div data-component=\\"MyComponent\\" />;
}"
`;

exports[`babelPluginReactComponentDataAttribute() name uses the file’s basename when it is not unknown and is not an index file 3`] = `
"export default (() => {
  return <div data-component=\\"MyComponent\\" />;
});"
`;

exports[`babelPluginReactComponentDataAttribute() name uses the file’s directory name when it is an index file 1`] = `
"export default class extends React.Component {
  render() {
    return <div data-component=\\"MyComponent\\" />;
  }
}"
`;

exports[`babelPluginReactComponentDataAttribute() name uses the file’s directory name when it is an index file 2`] = `
"export default function () {
  return <div data-component=\\"MyComponent\\" />;
}"
`;

exports[`babelPluginReactComponentDataAttribute() name uses the file’s directory name when it is an index file 3`] = `
"export default (() => {
  return <div data-component=\\"MyComponent\\" />;
});"
`;

exports[`babelPluginReactComponentDataAttribute() name uses the variable name when no name exists 1`] = `
"const MyComponent = class extends React.Component {
  render() {
    return <div data-component=\\"MyComponent\\" />;
  }
};"
`;

exports[`babelPluginReactComponentDataAttribute() name uses the variable name when no name exists 2`] = `
"const MyComponent = function () {
  return <div data-component=\\"MyComponent\\" />;
};"
`;

exports[`babelPluginReactComponentDataAttribute() only adds the attribute to the top-level node 1`] = `
"function MyComponent() {
  return <div data-component=\\"MyComponent\\"><div /></div>;
}"
`;

exports[`babelPluginReactComponentDataAttribute() only adds the attribute to the top-level node 2`] = `
"function MyComponent() {
  return <SomeOtherComponent><div /></SomeOtherComponent>;
}"
`;

exports[`babelPluginReactComponentDataAttribute() only adds the attribute to the top-level node 3`] = `
"function MyComponent() {
  return <SomeOtherComponent>{() => <div />}</SomeOtherComponent>;
}"
`;

exports[`babelPluginReactComponentDataAttribute() options onlyRootComponents adds attributes to components that are "root" ones 1`] = `
"export default function MyComponent() {
  return <div data-component=\\"MyComponent\\" />;
}"
`;

exports[`babelPluginReactComponentDataAttribute() options onlyRootComponents adds attributes to components that are "root" ones 2`] = `
"export default function SomeComponent() {
  return <div data-component=\\"SomeComponent\\" />;
}"
`;

exports[`babelPluginReactComponentDataAttribute() options onlyRootComponents adds attributes to components that are "root" ones 3`] = `
"export function MyComponent() {
  return <div data-component=\\"MyComponent\\" />;
}"
`;

exports[`babelPluginReactComponentDataAttribute() options onlyRootComponents does not add data attributes to other components 1`] = `
"function SomeComponent() {
  return <div />;
}"
`;

exports[`babelPluginReactComponentDataAttribute() options onlyRootComponents does not add data attributes to other components 2`] = `
"export default function SomeComponent() {
  return <div />;
}"
`;

exports[`babelPluginReactComponentDataAttribute() updates intermediate assignments as appropriate 1`] = `
"function MyComponent() {
  const markup = <div data-component=\\"MyComponent\\" />;
  return markup;
}"
`;

exports[`babelPluginReactComponentDataAttribute() updates intermediate assignments as appropriate 2`] = `
"function MyComponent() {
  const markup = <SomeOtherComponent />;
  return markup;
}"
`;

exports[`babelPluginReactComponentDataAttribute() updates intermediate assignments as appropriate 3`] = `
"function MyComponent() {
  const markup = null;
  return markup;
}"
`;

exports[`babelPluginReactComponentDataAttribute() updates intermediate assignments as appropriate 4`] = `
"function MyComponent() {
  const markup = React.createElement('div', {
    'data-component': 'MyComponent'
  });
  return markup;
}"
`;
